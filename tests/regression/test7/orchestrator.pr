/* CIF PROCESS (201, 147), (150, 75) */
PROCESS orchestrator;
    /* CIF TEXT (1074, 12), (289, 233) */
    -- GNC Orchestrator for the VEGA simulator

DCL gnc_output T_GNC_LV_SIM_INPUTS;

DCL gnc_input T_GNC_LV_SIM_CONTEXT;

DCL major_cycle T_UInt32 := 1;
DCL sub_cycle T_Int8 := -1;

dcl run_counter T_Int32 := -1;

dcl command Simulation_Param;

timer timeout;
    /* CIF ENDTEXT */
    /* CIF PROCEDURE (748, 54), (122, 50) */
    PROCEDURE update_cycle
    /* CIF COMMENT (921, 53), (100, 50) */
    COMMENT 'Checkme';
        /* CIF START (335, 138), (100, 50) */
        START;
            /* CIF DECISION (326, 203), (118, 70) */
            DECISION sub_cycle = 7
            /* CIF COMMENT (464, 213), (199, 50) */
            COMMENT 'Compute next major cycle';
                    /* CIF ANSWER (203, 293), (100, 35) */
                    (true):
                        /* CIF TASK (115, 343), (276, 53) */
                        TASK sub_cycle := 0,
major_cycle := (major_cycle + 1) mod 50;
                        /* CIF PROCEDURECALL (153, 411), (200, 50) */
                        CALL jump_to_next_major_cycle;
                    /* CIF ANSWER (473, 293), (100, 35) */
                    (false):
                        /* CIF TASK (401, 343), (243, 50) */
                        TASK sub_cycle := (sub_cycle + 1) mod 7;
            ENDDECISION;
            /* CIF RETURN (360, 476), (50, 50) */
            RETURN ;
    ENDPROCEDURE;
    /* CIF START (1579, 273), (100, 50) */
    START;
        /* CIF PROCEDURECALL (1534, 338), (189, 50) */
        CALL writeln
('[Orchestrator] Startup');
        /* CIF NEXTSTATE (1571, 403), (116, 50) */
        NEXTSTATE Stopped;
    /* CIF LABEL (629, 179), (100, 50) */
    CONNECTION Here:
    /* CIF End Label */
    ENDCONNECTION;
    /* CIF STATE (2956, 97), (133, 50) */
    STATE Wait_for_VESAT;
        /* CIF INPUT (2557, 167), (111, 50) */
        INPUT VESAT_Data
(gnc_input);
            /* CIF PROCEDURECALL (2554, 232), (116, 50) */
            CALL reset_timer
(timeout);
            /* CIF PROCEDURECALL (2552, 297), (121, 50) */
            CALL update_cycle
            /* CIF COMMENT (2689, 297), (199, 50) */
            COMMENT 'Compute next major cycle';
            /* CIF DECISION (2548, 362), (128, 70) */
            DECISION run_counter;
                    /* CIF ANSWER (2621, 452), (100, 35) */
                    (-1):
                    /* CIF ANSWER (2465, 453), (100, 35) */
                    (>1):
                        /* CIF TASK (2419, 503), (192, 50) */
                        TASK run_counter :=
(run_counter-1) mod 1;
                    /* CIF ANSWER (2769, 453), (100, 35) */
                    ELSE:
                        /* CIF PROCEDURECALL (2731, 503), (175, 50) */
                        CALL writeln
('[Orchestrator] Done');
                        /* CIF NEXTSTATE (2769, 568), (100, 50) */
                        NEXTSTATE Pause;
            ENDDECISION;
            /* CIF NEXTSTATE (2562, 633), (100, 50) */
            NEXTSTATE Running;
        /* CIF INPUT (3003, 167), (100, 50) */
        INPUT pulse;
            /* CIF PROCEDURECALL (2950, 232), (205, 50) */
            CALL writeln
('[Orchestrator] Cycle loss');
            /* CIF NEXTSTATE (2988, 297), (129, 50) */
            NEXTSTATE Wait_for_vesat;
        /* CIF INPUT (3241, 167), (100, 50) */
        INPUT timeout;
            /* CIF PROCEDURECALL (3166, 232), (250, 50) */
            CALL writeln
('[Orchestrator] Lost connection?');
            /* CIF NEXTSTATE (3241, 297), (100, 50) */
            NEXTSTATE Pause;
    ENDSTATE;
    /* CIF STATE (215, 26), (116, 50) */
    STATE Stopped;
        /* CIF INPUT (221, 96), (105, 50) */
        INPUT simulate
(command);
            /* CIF PROCEDURECALL (223, 161), (100, 50) */
            CALL gnc_init;
            /* CIF LABEL (225, 226), (96, 50) */
            run_cmd:
            /* CIF TASK (190, 291), (166, 50) */
            TASK gnc_input :=
command!gnc_inputs;
            /* CIF DECISION (163, 356), (221, 70) */
            DECISION present(command!command);
                    /* CIF ANSWER (843, 446), (100, 35) */
                    (pause):
                        /* CIF PROCEDURECALL (804, 496), (179, 50) */
                        CALL writeln
('[Orchestrator] Pause');
                        /* CIF NEXTSTATE (843, 561), (100, 50) */
                        NEXTSTATE Pause;
                    /* CIF ANSWER (66, 447), (109, 35) */
                    (run_forever):
                        /* CIF TASK (51, 497), (139, 50) */
                        TASK run_counter := -1;
                        /* CIF PROCEDURECALL (0, 562), (242, 78) */
                        CALL writeln
('[Orchestrator] Running forever ');
                    /* CIF ANSWER (587, 446), (127, 35) */
                    (run_n_seconds):
                        /* CIF TASK (508, 496), (286, 53) */
                        TASK run_counter :=
(command!command!run_n_seconds * 25)
mod 2147483647;
                        /* CIF PROCEDURECALL (555, 564), (192, 78) */
                        CALL writeln
('[Orchestrator] Running ',
run_counter,
 ' steps');
                    /* CIF ANSWER (320, 446), (110, 35) */
                    (run_n_steps):
                        /* CIF TASK (252, 496), (246, 53) */
                        TASK run_counter :=
(command!command!run_n_steps)
mod 2147483647;
                        /* CIF PROCEDURECALL (279, 564), (192, 78) */
                        CALL writeln
('[Orchestrator] Running ',
run_counter,
 ' steps');
                        /* CIF LABEL (325, 657), (100, 50) */
                        There:
                    /* CIF ANSWER (1058, 446), (100, 35) */
                    (test_gnc):
                        /* CIF PROCEDURECALL (1049, 496), (117, 53) */
                        CALL gnc_onestep
(gnc_input,
gnc_output)
                        /* CIF COMMENT (1187, 498), (170, 50) */
                        COMMENT 'Call the GNC function
(for testing only)';
                        /* CIF OUTPUT (993, 564), (230, 68) */
                        OUTPUT plot( { major_cycle major_cycle,
subcycle sub_cycle,
gnc_inputs gnc_input,
gnc_outputs gnc_output });
                        /* CIF PROCEDURECALL (1047, 647), (121, 50) */
                        CALL update_cycle;
                        /* CIF NEXTSTATE (1051, 712), (114, 50) */
                        NEXTSTATE test_mode;
            ENDDECISION;
            /* CIF LABEL (210, 777), (126, 50) */
            AndHereAgain:
            /* CIF DECISION (208, 842), (131, 70) */
            DECISION run_counter = 0;
                    /* CIF ANSWER (276, 932), (100, 35) */
                    (false):
                        /* CIF NEXTSTATE (276, 982), (100, 50) */
                        NEXTSTATE Running;
                    /* CIF ANSWER (166, 932), (100, 35) */
                    (true):
                        /* CIF NEXTSTATE (166, 982), (100, 50) */
                        NEXTSTATE Pause;
            ENDDECISION;
    ENDSTATE;
    /* CIF STATE (1972, 105), (100, 50) */
    STATE Running;
        /* CIF INPUT (1753, 175), (100, 50) */
        INPUT pulse
        /* CIF COMMENT (1873, 175), (114, 50) */
        COMMENT 'Periodic call
(40 ms)';
            /* CIF PROCEDURECALL (1744, 240), (117, 53) */
            CALL gnc_onestep
(gnc_input,
gnc_output)
            /* CIF COMMENT (1873, 243), (170, 50) */
            COMMENT 'Call the GNC function';
            /* CIF OUTPUT (1733, 308), (139, 50) */
            OUTPUT VESAT_one_step
(gnc_output)
            /* CIF COMMENT (1893, 308), (133, 50) */
            COMMENT 'Get VESAT data';
            /* CIF PROCEDURECALL (1738, 373), (129, 50) */
            CALL set_timer
(1000, timeout)
            /* CIF COMMENT (1887, 373), (209, 50) */
            COMMENT 'Make sure we receive
an answer within one second';
            /* CIF NEXTSTATE (1738, 438), (129, 50) */
            NEXTSTATE Wait_for_vesat;
        /* CIF INPUT (2106, 175), (136, 50) */
        INPUT simulate
(command)
        /* CIF COMMENT (2262, 175), (182, 50) */
        COMMENT 'New command from GUI';
            /* CIF JOIN (2149, 240), (50, 50) */
            JOIN run_cmd;
    ENDSTATE;
    /* CIF STATE (422, 30), (100, 50) */
    STATE Pause;
        /* CIF INPUT (419, 100), (105, 50) */
        INPUT simulate
(command);
            /* CIF JOIN (446, 165), (50, 50) */
            JOIN run_cmd;
    ENDSTATE;
    /* CIF STATE (754, 128), (105, 50) */
    STATE test_mode;
        /* CIF INPUT (739, 198), (136, 50) */
        INPUT simulate
(command);
            /* CIF JOIN (782, 263), (50, 50) */
            JOIN run_cmd;
    ENDSTATE;
ENDPROCESS orchestrator;